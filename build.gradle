buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("com.bmuschko:gradle-nexus-plugin:2.3.1")
    }
}

plugins {
    id 'java'
    id("maven")
    id("signing")
    id("org.spongepowered.plugin") version "0.6"
}
apply plugin: "com.bmuschko.nexus"
java {
    modularity.inferModulePath = true
}
compileJava {
    sourceCompatibility = JavaVersion.VERSION_11
    //will work with Java 1.8, but this is required as there is a module-info.java
    targetCompatibility = JavaVersion.VERSION_11
}

group 'net.mahdilamb'
version '0.2.24'
ext.moduleName = 'net.mahdilamb.dataframe'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'

}
test {
    useJUnitPlatform()
}

javadoc {
    options.tags = ["apiNote", "implNote", "implSpec"]
}

modifyPom {

    project {
        name = "dataframe"
        description = "Data Frame"
        url = "https://github.com/mahdilamb/dataframe"
        inceptionYear = "2020"

        licenses {
            license {
                name = "MIT License"
                url = "http://www.opensource.org/licenses/mit-license.php"
                distribution = "repo"
            }
        }
        developers {
            developer {
                id = "mahdilamb"
                name = "Mahdi Lamb"
                email = "mahdilamb[at]gmail[dot]com"
            }
        }
        scm {
            url = "https://github.com/mahdilamb/dataframe"
            connection = "scm:https://mahdilamb@github.com/mahdilamb/dataframe.git"
            developerConnection = "scm:git://github.com/mahdilamb/dataframe.git"
        }
    }
}

extraArchive {
    sources = true
    tests = true
    javadoc = true
}

nexus {
    sign = !version.endsWith("SNAPSHOT")
    repositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
    snapshotRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
}
